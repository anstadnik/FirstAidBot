name: Build, test and deploy

on:
  push:
    branches:
      - "dev"
      - "main"
  pull_request:
    branches:
      - "dev"
      - "main"

concurrency:
  group: ${{ github.ref_name }}

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    uses: ./.github/workflows/build_and_test.yml
    with:
      release: ${{ github.ref_name == 'main' }}
    secrets: inherit

  build_bot:
    needs: build_and_test
    uses: ./.github/workflows/build_and_test.yml
    with:
      release: ${{ github.ref_name == 'main' }}
    secrets: inherit

  deploy:
    runs-on: [self-hosted]
    needs: build_bot
    environment: ${{ github.ref_name }}
    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: executable

      - uses: actions/download-artifact@v3
        with:
          name: table

      - name: Restart bot
        env:
          TELOXIDE_TOKEN: ${{ secrets.TELOXIDE_TOKEN }}
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          docker build -t first_aid_bot:${{ github.ref_name }} .
          docker compose -f docker-compose_${{ github.ref_name }}.yml -p ${{ github.ref_name }}_bot up -d

  release:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' && startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: table
      - uses: actions/download-artifact@v3
        with:
          name: executable
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: |
            table.csv
            first_aid_bot

  notify:
    runs-on: ubuntu-latest
    needs: [deploy, release]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: table

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        if: ${{ always() && github.ref_name == 'main' && !contains(needs.*.result, 'failure') }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          document: table.csv
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            See changes: https://github.com/${{ github.repository }}/actions/runs/${{github.sha}}
            See error: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Successfully deployed ${{ github.ref_name }} bot! ðŸ™†

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        if: ${{ always() && github.ref_name == 'main' && contains(needs.*.result, 'failure') }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          document: table.csv
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            See changes: https://github.com/${{ github.repository }}/actions/runs/${{github.sha}}
            See error: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            The commit fails to build or tests have failed! ðŸ’£

  # It should wait untill all checks will pass
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          target: minor
          github-token: "${{ secrets.GITHUB_TOKEN }}"
