// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.32.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `__external_impl__4641436f6e74657874` is not used by any `pub` functions, thus it is ignored.

Future<Data> getData({dynamic hint}) =>
    RustLib.instance.api.getData(hint: hint);

FaContext getContext({dynamic hint}) =>
    RustLib.instance.api.getContext(hint: hint);

Future<Fs_> getState(
        {required Data data, required FaContext ctx, dynamic hint}) =>
    RustLib.instance.api.getState(data: data, ctx: ctx, hint: hint);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Data>>
@sealed
class Data extends RustOpaque {
  Data.dcoDecode(List<dynamic> wire) : super.dcoDecode(wire, _kStaticData);

  Data.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Data,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Data,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_DataPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<FAContext>>
@sealed
class FaContext extends RustOpaque {
  FaContext.dcoDecode(List<dynamic> wire) : super.dcoDecode(wire, _kStaticData);

  FaContext.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_FaContext,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_FaContext,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_FaContextPtr,
  );

  Future<void> back({dynamic hint}) =>
      RustLib.instance.api.faContextBack(that: this, hint: hint);

  Future<int> depth({dynamic hint}) =>
      RustLib.instance.api.faContextDepth(that: this, hint: hint);

  Future<void> home({dynamic hint}) =>
      RustLib.instance.api.faContextHome(that: this, hint: hint);

  Future<bool> isEmpty({dynamic hint}) =>
      RustLib.instance.api.faContextIsEmpty(that: this, hint: hint);

  Future<void> transition({required String text, dynamic hint}) =>
      RustLib.instance.api
          .faContextTransition(that: this, text: text, hint: hint);
}

class Fs_ {
  final String? link;
  final String message;
  final List<String> nextStates;

  const Fs_({
    this.link,
    required this.message,
    required this.nextStates,
  });

  @override
  int get hashCode => link.hashCode ^ message.hashCode ^ nextStates.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Fs_ &&
          runtimeType == other.runtimeType &&
          link == other.link &&
          message == other.message &&
          nextStates == other.nextStates;
}
